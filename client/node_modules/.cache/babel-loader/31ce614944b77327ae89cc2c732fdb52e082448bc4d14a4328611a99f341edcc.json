{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{supabase}from'../client';import'./CreatePost.css';// Reuse the same CSS as CreatePost\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditPost=()=>{const{id}=useParams();// Get the post ID from the URL\nconst navigate=useNavigate();// For navigation after actions\nconst[post,setPost]=useState({title:'',description:'',image:''});// Fetch the post data when the component mounts\nuseEffect(()=>{const fetchPost=async()=>{try{const{data,error}=await supabase.from('Posts').select('*').eq('id',id).single();if(error){throw error;}setPost(data);// Set the fetched post data\n}catch(error){console.error('Error fetching post:',error.message);}};fetchPost();},[id]);// Handle input changes\nconst handleChange=event=>{const{name,value}=event.target;setPost(prev=>({...prev,[name]:value}));};// Handle post update\nconst updatePost=async event=>{event.preventDefault();try{const{error}=await supabase.from('Posts').update({title:post.title,description:post.description,image:post.image}).eq('id',id);if(error){throw error;}navigate('/');// Redirect to the homepage after updating\n}catch(error){console.error('Error updating post:',error.message);}};// Handle post deletion\nconst deletePost=async()=>{try{const{error}=await supabase.from('Posts').delete().eq('id',id);if(error){throw error;}navigate('/');// Redirect to the homepage after deleting\n}catch(error){console.error('Error deleting post:',error.message);}};return/*#__PURE__*/_jsx(\"div\",{className:\"create-post-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:updatePost,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"title\",name:\"title\",value:post.title,onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"description\",name:\"description\",value:post.description,onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"image\",children:\"Image-url\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"image\",name:\"image\",value:post.image,onChange:handleChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submitButton\",children:\"Update\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"deleteButton\",onClick:deletePost,children:\"Delete\"})]})]})});};export default EditPost;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","supabase","jsx","_jsx","jsxs","_jsxs","EditPost","id","navigate","post","setPost","title","description","image","fetchPost","data","error","from","select","eq","single","console","message","handleChange","event","name","value","target","prev","updatePost","preventDefault","update","deletePost","delete","className","children","onSubmit","htmlFor","type","onChange","onClick"],"sources":["C:/Users/Sean/Desktop/school/college/COP 4808 Full Stack/final-project-Sean-Weller/client/src/pages/EditPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './CreatePost.css'; // Reuse the same CSS as CreatePost\n\nconst EditPost = () => {\n    const { id } = useParams(); // Get the post ID from the URL\n    const navigate = useNavigate(); // For navigation after actions\n    const [post, setPost] = useState({ title: '', description: '', image: '' });\n\n    // Fetch the post data when the component mounts\n    useEffect(() => {\n        const fetchPost = async () => {\n            try {\n                const { data, error } = await supabase\n                    .from('Posts')\n                    .select('*')\n                    .eq('id', id)\n                    .single();\n\n                if (error) {\n                    throw error;\n                }\n\n                setPost(data); // Set the fetched post data\n            } catch (error) {\n                console.error('Error fetching post:', error.message);\n            }\n        };\n\n        fetchPost();\n    }, [id]);\n\n    // Handle input changes\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setPost((prev) => ({\n            ...prev,\n            [name]: value,\n        }));\n    };\n\n    // Handle post update\n    const updatePost = async (event) => {\n        event.preventDefault();\n\n        try {\n            const { error } = await supabase\n                .from('Posts')\n                .update({\n                    title: post.title,\n                    description: post.description,\n                    image: post.image,\n                })\n                .eq('id', id);\n\n            if (error) {\n                throw error;\n            }\n\n            navigate('/'); // Redirect to the homepage after updating\n        } catch (error) {\n            console.error('Error updating post:', error.message);\n        }\n    };\n\n    // Handle post deletion\n    const deletePost = async () => {\n        try {\n            const { error } = await supabase\n                .from('Posts')\n                .delete()\n                .eq('id', id);\n\n            if (error) {\n                throw error;\n            }\n\n            navigate('/'); // Redirect to the homepage after deleting\n        } catch (error) {\n            console.error('Error deleting post:', error.message);\n        }\n    };\n\n    return (\n        <div className=\"create-post-container\">\n            <form onSubmit={updatePost}>\n                <label htmlFor=\"title\">Title</label>\n                <input\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    value={post.title}\n                    onChange={handleChange}\n                />\n\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    value={post.description}\n                    onChange={handleChange}\n                ></textarea>\n\n                <label htmlFor=\"image\">Image-url</label>\n                <input\n                    type=\"text\"\n                    id=\"image\"\n                    name=\"image\"\n                    value={post.image}\n                    onChange={handleChange}\n                />\n\n                <div className=\"button-group\">\n                    <button type=\"submit\" className=\"submitButton\">\n                        Update\n                    </button>\n                    <button type=\"submit\" className=\"deleteButton\"\n                        onClick={deletePost}\n                    >\n                        Delete\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default EditPost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}