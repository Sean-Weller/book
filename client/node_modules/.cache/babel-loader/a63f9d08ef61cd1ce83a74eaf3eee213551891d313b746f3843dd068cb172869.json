{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import{supabase}from'../client';import'./PostPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PostPage=()=>{const{id}=useParams();// Get the post ID from the URL\nconst[post,setPost]=useState(null);// State for the post data\nconst[loading,setLoading]=useState(true);// State for loading\nconst[comment,setComment]=useState('');// State for the comment input\nconst[comments,setComments]=useState([]);// State for comments\n// Fetch the post data when the component mounts\nuseEffect(()=>{const fetchPost=async()=>{try{const{data,error}=await supabase.from('Posts')// Query the \"Posts\" table\n.select('*')// Select all columns\n.eq('id',id)// Filter by the post ID\n.single();// Expect a single result\nif(error){throw error;}setPost(data);// Set the fetched post data\n}catch(error){console.error('Error fetching post:',error.message);}finally{setLoading(false);// Stop loading\n}};fetchPost();},[id]);// Handle upvote functionality\nconst handleUpvote=async()=>{if(!post)return;try{const updatedUpvotes=post.upvotes+1;const{error}=await supabase.from('Posts').update({upvotes:updatedUpvotes}).eq('id',id);if(error){throw error;}setPost({...post,upvotes:updatedUpvotes});// Update the local state\n}catch(error){console.error('Error updating upvotes:',error.message);}};// Handle adding a comment\nconst handleCommentSubmit=e=>{e.preventDefault();if(comment.trim()){setComments([...comments,comment]);setComment('');}};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// Show a loading message while fetching data\n}if(!post){return/*#__PURE__*/_jsx(\"div\",{children:\"Post not found.\"});// Show an error message if the post is not found\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"PostPage\",children:[/*#__PURE__*/_jsx(\"h2\",{children:post.title}),/*#__PURE__*/_jsx(\"p\",{children:post.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"post-actions\",children:[/*#__PURE__*/_jsx(Link,{to:`/edit/${post.id}`,children:/*#__PURE__*/_jsx(\"button\",{className:\"action-button\",children:\"Edit\"})}),/*#__PURE__*/_jsxs(\"button\",{className:\"action-button\",onClick:handleUpvote,children:[\"\\uD83D\\uDC4D Upvotes: \",post.upvotes]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Comments\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCommentSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Leave a comment...\",value:comment,onChange:e=>setComment(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button\",type:\"submit\",children:\"Submit\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"comments-list\",children:comments.map((c,index)=>/*#__PURE__*/_jsx(\"li\",{children:c},index))})]});};export default PostPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","supabase","jsx","_jsx","jsxs","_jsxs","PostPage","id","post","setPost","loading","setLoading","comment","setComment","comments","setComments","fetchPost","data","error","from","select","eq","single","console","message","handleUpvote","updatedUpvotes","upvotes","update","handleCommentSubmit","e","preventDefault","trim","children","className","title","description","to","onClick","onSubmit","type","placeholder","value","onChange","target","map","c","index"],"sources":["C:/Users/Sean/Desktop/school/college/COP 4808 Full Stack/final-project-Sean-Weller/client/src/pages/PostPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './PostPage.css';\n\nconst PostPage = () => {\n    const { id } = useParams(); // Get the post ID from the URL\n    const [post, setPost] = useState(null); // State for the post data\n    const [loading, setLoading] = useState(true); // State for loading\n    const [comment, setComment] = useState(''); // State for the comment input\n    const [comments, setComments] = useState([]); // State for comments\n\n    // Fetch the post data when the component mounts\n    useEffect(() => {\n        const fetchPost = async () => {\n            try {\n                const { data, error } = await supabase\n                    .from('Posts') // Query the \"Posts\" table\n                    .select('*') // Select all columns\n                    .eq('id', id) // Filter by the post ID\n                    .single(); // Expect a single result\n\n                if (error) {\n                    throw error;\n                }\n\n                setPost(data); // Set the fetched post data\n            } catch (error) {\n                console.error('Error fetching post:', error.message);\n            } finally {\n                setLoading(false); // Stop loading\n            }\n        };\n\n        fetchPost();\n    }, [id]);\n\n    // Handle upvote functionality\n    const handleUpvote = async () => {\n        if (!post) return;\n\n        try {\n            const updatedUpvotes = post.upvotes + 1;\n\n            const { error } = await supabase\n                .from('Posts')\n                .update({ upvotes: updatedUpvotes })\n                .eq('id', id);\n\n            if (error) {\n                throw error;\n            }\n\n            setPost({ ...post, upvotes: updatedUpvotes }); // Update the local state\n        } catch (error) {\n            console.error('Error updating upvotes:', error.message);\n        }\n    };\n\n    // Handle adding a comment\n    const handleCommentSubmit = (e) => {\n        e.preventDefault();\n        if (comment.trim()) {\n            setComments([...comments, comment]);\n            setComment('');\n        }\n    };\n\n    if (loading) {\n        return <div>Loading...</div>; // Show a loading message while fetching data\n    }\n\n    if (!post) {\n        return <div>Post not found.</div>; // Show an error message if the post is not found\n    }\n\n    return (\n        <div className=\"PostPage\">\n            <h2>{post.title}</h2>\n            <p>{post.description}</p>\n            <div className=\"post-actions\">\n                <Link to={`/edit/${post.id}`}>\n                    <button className=\"action-button\">Edit</button>\n                </Link>\n                <button className=\"action-button\" onClick={handleUpvote}>\n                    üëç Upvotes: {post.upvotes}\n                </button>\n            </div>\n            <h2>Comments</h2>\n            <form onSubmit={handleCommentSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Leave a comment...\"\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                />\n                <button className=\"action-button\" type=\"submit\">Submit</button>\n            </form>\n            <ul className=\"comments-list\">\n                {comments.map((c, index) => (\n                    <li key={index}>{c}</li>\n                ))}\n            </ul>\n            {/* Remove or define filteredPosts */}\n        </div>\n    );\n};\n\nexport default PostPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}