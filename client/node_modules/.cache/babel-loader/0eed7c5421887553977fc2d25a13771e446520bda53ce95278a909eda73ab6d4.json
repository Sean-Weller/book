{"ast":null,"code":"import React,{useState,useEffect}from'react';import Card from'../components/Card';import{supabase}from'../client';// Importing the Supabase client\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ReadPosts=()=>{const[searchQuery,setSearchQuery]=useState('');// State for search query\nconst[posts,setPosts]=useState([]);// State for posts\nconst[sortBy,setSortBy]=useState('created_at');// State for sorting\n// Fetch posts from Supabase\nuseEffect(()=>{const fetchPosts=async()=>{try{const{data,error}=await supabase.from('Posts')// Specify the table\n.select()// Select all records\n.order(sortBy,{ascending:sortBy!=='created_at'});// Sort descending for 'created_at', ascending for 'upvotes'\nif(error){throw error;}setPosts(data);// Set the fetched data to state\n}catch(error){console.error('Error fetching posts:',error.message);}};fetchPosts();// Call the fetch function when the component mounts\n},[sortBy]);// Dependency array includes sortBy to fetch posts when sortBy changes\n// Handle search input change\nconst handleSearchChange=event=>{setSearchQuery(event.target.value);};// Handle sorting change\nconst handleSortChange=event=>{setSortBy(event.target.value);};// Handle upvote functionality\nconst handleUpvote=async postId=>{try{// Find the post to upvote\nconst postToUpdate=posts.find(post=>post.id===postId);if(!postToUpdate)return;// Increment the upvotes\nconst updatedUpvotes=postToUpdate.upvotes+1;// Update the upvotes in the Supabase database\nconst{error}=await supabase.from('Posts').update({upvotes:updatedUpvotes}).eq('id',postId);if(error){throw error;}// Update the local state\nsetPosts(prevPosts=>prevPosts.map(post=>post.id===postId?{...post,upvotes:updatedUpvotes}:post));}catch(error){console.error('Error upvoting post:',error.message);}};// Filter posts based on the search query\nconst filteredPosts=posts.filter(post=>post.title.toLowerCase().includes(searchQuery.toLowerCase()));return/*#__PURE__*/_jsxs(\"div\",{className:\"ReadPosts\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsxs(\"select\",{value:sortBy,onChange:handleSortChange,className:\"sort-dropdown\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"created_at\",children:\"Sort by: Created Time\"}),/*#__PURE__*/_jsx(\"option\",{value:\"upvotes\",children:\"Sort by: Upvotes\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search Posts\",value:searchQuery,onChange:handleSearchChange,className:\"search-bar\"})]}),/*#__PURE__*/_jsx(\"br\",{}),filteredPosts.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"card-container\",children:filteredPosts.map(post=>/*#__PURE__*/_jsx(Card,{id:post.id,title:post.title,created_at:post.created_at,url:post.url,upvotes:post.upvotes,onUpvote:handleUpvote// Pass the upvote handler\n},post.id))}):/*#__PURE__*/_jsx(\"h2\",{children:\"No Posts Found \\uD83D\\uDE1E\"})]});};export default ReadPosts;","map":{"version":3,"names":["React","useState","useEffect","Card","supabase","jsx","_jsx","jsxs","_jsxs","ReadPosts","searchQuery","setSearchQuery","posts","setPosts","sortBy","setSortBy","fetchPosts","data","error","from","select","order","ascending","console","message","handleSearchChange","event","target","value","handleSortChange","handleUpvote","postId","postToUpdate","find","post","id","updatedUpvotes","upvotes","update","eq","prevPosts","map","filteredPosts","filter","title","toLowerCase","includes","className","children","onChange","type","placeholder","length","created_at","url","onUpvote"],"sources":["C:/Users/Sean/Desktop/school/college/COP 4808 Full Stack/final-project-Sean-Weller/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client'; // Importing the Supabase client\n\nconst ReadPosts = () => {\n    const [searchQuery, setSearchQuery] = useState(''); // State for search query\n    const [posts, setPosts] = useState([]); // State for posts\n    const [sortBy, setSortBy] = useState('created_at'); // State for sorting\n\n    // Fetch posts from Supabase\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const { data, error } = await supabase\n                    .from('Posts') // Specify the table\n                    .select() // Select all records\n                    .order(sortBy, { ascending: sortBy !== 'created_at' }); // Sort descending for 'created_at', ascending for 'upvotes'\n\n                if (error) {\n                    throw error;\n                }\n\n                setPosts(data); // Set the fetched data to state\n            } catch (error) {\n                console.error('Error fetching posts:', error.message);\n            }\n        };\n\n        fetchPosts(); // Call the fetch function when the component mounts\n    }, [sortBy]); // Dependency array includes sortBy to fetch posts when sortBy changes\n\n    // Handle search input change\n    const handleSearchChange = (event) => {\n        setSearchQuery(event.target.value);\n    };\n\n    // Handle sorting change\n    const handleSortChange = (event) => {\n        setSortBy(event.target.value);\n    };\n\n    // Handle upvote functionality\n    const handleUpvote = async (postId) => {\n        try {\n            // Find the post to upvote\n            const postToUpdate = posts.find((post) => post.id === postId);\n\n            if (!postToUpdate) return;\n\n            // Increment the upvotes\n            const updatedUpvotes = postToUpdate.upvotes + 1;\n\n            // Update the upvotes in the Supabase database\n            const { error } = await supabase\n                .from('Posts')\n                .update({ upvotes: updatedUpvotes })\n                .eq('id', postId);\n\n            if (error) {\n                throw error;\n            }\n\n            // Update the local state\n            setPosts((prevPosts) =>\n                prevPosts.map((post) =>\n                    post.id === postId ? { ...post, upvotes: updatedUpvotes } : post\n                )\n            );\n        } catch (error) {\n            console.error('Error upvoting post:', error.message);\n        }\n    };\n\n    // Filter posts based on the search query\n    const filteredPosts = posts.filter((post) =>\n        post.title.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div className=\"ReadPosts\">\n            <div className=\"controls\">\n                <select value={sortBy} onChange={handleSortChange} className=\"sort-dropdown\">\n                    <option value=\"created_at\">Sort by: Created Time</option>\n                    <option value=\"upvotes\">Sort by: Upvotes</option>\n                </select>\n                <br />\n                <input\n                    type=\"text\"\n                    placeholder=\"Search Posts\"\n                    value={searchQuery}\n                    onChange={handleSearchChange}\n                    className=\"search-bar\"\n                />\n            </div>\n            <br />\n            {filteredPosts.length > 0 ? (\n                <div className=\"card-container\">\n                    {filteredPosts.map((post) => (\n                        <Card\n                            key={post.id}\n                            id={post.id}\n                            title={post.title}\n                            created_at={post.created_at}\n                            url={post.url}\n                            upvotes={post.upvotes}\n                            onUpvote={handleUpvote} // Pass the upvote handler\n                        />\n                    ))}\n                </div>\n            ) : (\n                <h2>No Posts Found ðŸ˜ž</h2>\n            )}\n        </div>\n    );\n};\n\nexport default ReadPosts;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}